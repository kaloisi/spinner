{"version":3,"sources":["Spinner.js","index.js","utils.js"],"names":["Spinner","props","state","spinCount","view","h","w","data","error","info","console","log","height","window","innerHeight","width","innerWidth","this","setState","setSize","url","Utils","getQueryParameter","fetch","method","then","res","json","e","catch","alert","deg","radius","rad","Math","PI","x","cos","y","sin","center","startDeg","endDeg","i","min","p","cacluatePointOnCircle","slice","ringNumber","ringCount","sliceNumber","numberOfSlices","sliceWidth","key","pieSize","halfSlice","transform","d","createLinesAlongCurve","fill","getColor","stroke","strokeWidth","textAnchor","fontSize","length","viewPort","map","spinner","isBackwards","randomRotation","round","random","centerStringPx","sliceSize","snap","className","addRule","renderSlice","onMouseUp","refresh","renderSpinners","React","Component","ReactDOM","render","Fragment","document","getElementById","COLORS","deleteExistingScript","id","children","head","childNodes","child","nodeName","removeChild","module","exports","name","search","location","charAt","substring","split","nv","outOf","styleEl","createElement","setAttribute","appendChild","styleSheet","sheet","rules","Object","values","forEach","r","insertRule"],"mappings":"iMAkKeA,E,kDA7JX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAW,EACXC,KAAM,CAAEC,EAAG,EAAGC,EAAG,GACjBC,KAAM,IALK,E,qDASnB,SAAkBC,EAAOC,GACrBC,QAAQC,IAAI,QAASH,EAAOC,K,qBAGhC,WACI,IAAMG,EAASC,OAAOC,YAAc,EAC9BC,EAAQF,OAAOG,WAAa,EAClCC,KAAKC,SAAS,CACVd,KAAM,CAAEC,EAAGO,EAAQN,EAAGS,O,+BAI9B,WAAqB,IAAD,OAChBE,KAAKE,UACL,IAAIC,EAAMC,IAAMC,kBAAkB,OAC7BF,IACDA,EAAM,yBAEVV,QAAQC,IAAI,UAAWS,GACvBG,MAAMH,EAAK,CAACI,OAAQ,QACpBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACD,IACIjB,QAAQC,IAAI,SAAUgB,GACtB,EAAKT,SAAS,CACVX,KAAMoB,IAEZ,MAAOC,GACLlB,QAAQC,IAAI,QAASiB,OAE1BC,OAAM,SAAAD,GACLf,OAAOiB,MAAP,mCAAyCV,EAAzC,cAAkDQ,IAClDlB,QAAQC,IAAI,QAASiB,Q,mCAI7B,SAAsBG,EAAKC,GAEvB,IACMC,EAAMF,GADMG,KAAKC,GAAK,KAE5B,MAAO,CACHC,EAAGF,KAAKG,IAAIJ,GAAOD,EACnBM,EAAGJ,KAAKK,IAAIN,GAAOD,K,mCAIzB,SAAsBQ,EAAQC,EAAUC,EAAQV,GAG5C,IAFA,IACIzB,EAAO,KAAOiC,EAAOJ,EAAI,IAAMI,EAAOF,EAAI,MACtCK,EAAIF,EAAUE,EAAKD,EAFV,EAE8BC,GAF9B,EAEgD,CAC7D,IAAMZ,EAAMG,KAAKU,IAAID,EAAGD,GAClBG,EAAI5B,KAAK6B,sBAAsBf,EAAKC,GAG1CzB,GAAQ,OAFAiC,EAAOJ,EAAIS,EAAET,GAED,KADZI,EAAOF,EAAIO,EAAEP,GACS,MAElC,OAAO/B,EAAO,O,yBAGpB,SAAYiC,EAAQR,EAAQe,EAAOC,EAAYC,EAAWC,EAAaC,GACnE,IAAMC,EAAapB,EAAUA,EAAOiB,EAAcD,EAC5CK,EAAM,IAAML,EAAa,IAAME,EAC/BI,EAAU,IAAOH,EACjBI,EAAYD,EAAU,EAC5B,OACI,oBAAmBE,UAAW,UAAaF,EAAUJ,EAAe,IAAMV,EAAOJ,EAAK,IAAMI,EAAOF,EAAI,IAAvG,UACI,sBAAsBmB,EAAGxC,KAAKyC,sBAAsBlB,GAASe,EAAWA,EAAWH,GAC/EO,KAAMtC,IAAMuC,SAASV,EAAaC,GAAiBU,OAAO,OAAOC,YAAa,GADvE,IAAMT,GAEjB,sBAAsBjB,EAAGI,EAAOJ,EAAIgB,EAAa,GAAId,EAAGE,EAAOF,EAAGyB,WAAW,MAAMC,SAAS,SAA5F,SAAsGjB,GAA3F,IAAMM,KAHb,IAAMA,K,4BAStB,WAAkB,IAAD,OACPJ,EAAYhC,KAAKf,MAAMK,KAAK0D,OAC5BC,EAAWjD,KAAKf,MAAME,KACxB4B,EAASkC,EAAS7D,EAAI,EACtBmC,EAAS,CACTJ,EAAG8B,EAAS5D,EAAI,EAChBgC,EAAG4B,EAAS7D,EAAI,GASpB,OANI6D,EAAS5D,EAAI4D,EAAS7D,IACtB2B,EAASkC,EAAS5D,EAAI,GACtBkC,EAAOJ,EAAI,IAEf1B,QAAQC,IAAIuD,EAAUlC,EAAQQ,GAEvBvB,KAAKf,MAAMK,KAAK4D,KAAI,SAACC,EAASpB,GACjC,IAAIqB,EAAcrB,EAAa,GAAK,EAAI,GAAK,EACzCsB,EAAkBpC,KAAKqC,MAAM,IAAM,IAAMrC,KAAKsC,UAC9CC,EAAiB,IAAMvC,KAAKqC,MAAM/B,EAAOJ,GAAK,MAAQF,KAAKqC,MAAM/B,EAAOF,GAAK,KAC7EoC,EAAYxC,KAAKqC,MAAM,IAAMH,EAAQH,QACrCU,EAAOD,EAAaJ,EAAiBI,EAErCE,EAAY,UAAY5B,EAoB5B,OAnBA3B,IAAMwD,QAAQD,EAAd,sBACmBA,EADnB,oIAIgCH,EAJhC,4GAOgCH,EAAeK,GAAQN,EAPvD,4DAQgCI,EARhC,2DAWSG,EAXT,0FAa0BA,EAb1B,0HAoBI,mBAAuDA,UAAWA,EAAlE,SACI,4BAEIR,EAAQD,KAAI,SAACpB,EAAMG,GACf,OAAO,EAAK4B,YAAYtC,EAAQR,EAAQe,EAAOC,EAAYC,EAAWC,EAAakB,EAAQH,YAH3F,OAASjB,EAAa,IAAM,EAAK9C,MAAMC,YAD3C,IAAM6C,EAAa,IAAM,EAAK9C,MAAMC,gB,oBAYxD,WAAU,IAAD,OACL,OACI,qBAAK4E,UAAW,SAACnD,GAAD,OAAO,EAAKoD,WAA5B,SACI,qBAAsCjE,MAAOE,KAAKf,MAAME,KAAKE,EAAGM,OAAQK,KAAKf,MAAME,KAAKC,EAAxF,SACKY,KAAKgE,kBADA,IAAMhE,KAAKf,MAAMC,e,qBAOvC,WACIc,KAAKE,UACL,IAAIhB,EAAYc,KAAKf,MAAMC,UAAY,EACvCc,KAAKC,SAAS,CACVf,UAAWA,Q,GAzJD+E,IAAMC,WCA5BC,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,gBCP1B,IAAMC,EAAS,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAGxI,SAASC,EAAqBC,GAE1B,IADA,IAAIC,EAAWL,SAASM,KAAKC,WACpBnD,EAAI,EAAGA,EAAIiD,EAAS3B,OAAQtB,GAAK,EAAG,CACzC,IAAMoD,EAAQH,EAASjD,GACA,UAAnBoD,EAAMC,UAAwBD,EAAMJ,KAAOA,IAC3CjF,QAAQC,IAAI,WAAYoF,EAAMJ,IAC9BJ,SAASM,KAAKI,YAAYF,KAMtCG,EAAOC,QAAU,CACb7E,kBAAmB,SAAC8E,GAChB,IAAIC,EAASd,SAASe,SAASD,OAC/B,GAAIA,GAAUA,EAAOpC,OAAS,EAAG,CACL,KAApBoC,EAAOE,OAAO,KACdF,EAASA,EAAOG,UAAU,IAG9B,IADA,IAAIC,EAAQJ,EAAOI,MAAM,KACjB9D,EAAI,EAAGA,EAAI8D,EAAMxC,OAAQtB,IAAK,CAClC,IAAI+D,EAAKD,EAAM9D,GAAG8D,MAAM,KAExB,GADA/F,QAAQC,IAAI+F,GACRA,GAAmB,GAAbA,EAAGzC,QAAeyC,EAAG,KAAON,EAClC,OAAOM,EAAG,MAO1B9C,SAAU,SAACjB,EAAGgE,GACV,OAAIlB,EAAOxB,QAAW0C,EAAQ,EACnBlB,EAAO9C,GAAK8C,EAAOxB,OAAS,IAE5BwB,EAAO9C,EAAI8C,EAAOxB,SAIjCY,QAAS,SAACc,GACND,EAAqBC,GACrBiB,QAAUrB,SAASsB,cAAc,SACjCD,QAAQE,aAAa,KAAMnB,GAC3BJ,SAASM,KAAKkB,YAAYH,SAJH,IAKvB,IAAII,EAAaJ,QAAQK,MALF,mBAAVC,EAAU,iCAAVA,EAAU,kBAMvBC,OAAOC,OAAOF,GAAOG,SAAQ,SAACC,EAAE3E,GAC5BqE,EAAWO,WAAWD,EAAG3E,U","file":"static/js/main.f3087c59.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Utils from './utils';\n\nclass Spinner extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            spinCount: 1,\n            view: { h: 0, w: 0 }, \n            data: []\n        }\n    }\n\n    componentDidCatch(error, info) {\n        console.log(\"Error\", error, info);\n    }\n\n    setSize() {\n        const height = window.innerHeight - 2;\n        const width = window.innerWidth - 2;\n        this.setState({ \n            view: { h: height, w: width },\n        });\n    }\n\n    componentDidMount() {\n        this.setSize();\n        let url = Utils.getQueryParameter('url');\n        if (!url) {\n            url = 'spinners/default.json';\n        }\n        console.log('Loading', url)\n        fetch(url, {method: 'GET'}).\n        then(res => res.json()).\n        then(json => {\n            try {\n                console.log(\"Loaded\", json);\n                this.setState({\n                    data: json\n                });\n            } catch (e) {\n                console.log(\"Error\", e);\n            }\n        }).catch(e => {\n            window.alert(`Unable to read data from ${url} : ${e}`);\n            console.log(\"Error\", e);\n        })\n    }\n\n    cacluatePointOnCircle(deg, radius) {\n        // 𝑥=𝑟 sin𝜃, 𝑦 = 𝑟 cos𝜃.\n        const piFactor = (Math.PI / 180);\n        const rad = deg * piFactor;\n        return { \n            x: Math.cos(rad) * radius, \n            y: Math.sin(rad) * radius\n        };\n      }\n  \n      createLinesAlongCurve(center, startDeg, endDeg, radius) {\n          const deltaDeg = 5;\n          let data = \"M \" + center.x + \" \" + center.y + \" \\n\";\n          for(let i = startDeg; i < (endDeg + deltaDeg); i = i + deltaDeg) {\n              const deg = Math.min(i, endDeg);\n              const p = this.cacluatePointOnCircle(deg, radius);\n              let x = center.x + p.x;\n              let y = center.y + p.y;\n              data += \" L \" + x + \" \" + y + \" \\n\";\n          }\n          return data + \" z\";\n    }\n \n    renderSlice(center, radius, slice, ringNumber, ringCount, sliceNumber, numberOfSlices) {\n        const sliceWidth = radius - (radius/ringCount) *  ringNumber;\n        const key = \"r\" + ringNumber + \"s\" + sliceNumber;\n        const pieSize = 360 / (numberOfSlices);\n        const halfSlice = pieSize / 2;\n        return (\n            <g key={\"g\" + key} transform={\"rotate(\" + (pieSize * sliceNumber) + \" \" + center.x  + \" \" + center.y + \")\"}>\n                <path key={\"p\" + key} d={this.createLinesAlongCurve(center, -halfSlice, halfSlice, sliceWidth)}\n                    fill={Utils.getColor(sliceNumber, numberOfSlices)} stroke=\"#000\" strokeWidth={1}/>\n                <text key={\"t\" + key} x={center.x + sliceWidth - 25} y={center.y} textAnchor=\"end\" fontSize=\"1.15em\">{slice}</text>\n            </g>\n        );\n    }\n\n\n    renderSpinners() {\n        const ringCount = this.state.data.length;\n        const viewPort = this.state.view;\n        let radius = viewPort.h / 2;\n        let center = { \n            x: viewPort.w / 2,\n            y: viewPort.h / 2\n        };\n\n        if (viewPort.w < viewPort.h) {\n            radius = viewPort.w - 50;\n            center.x = 25;\n        }\n        console.log(viewPort, radius, center);\n\n        return this.state.data.map((spinner, ringNumber) => {\n            let isBackwards = ringNumber % 2 == 0 ? 1 : -1;\n            let randomRotation =  Math.round(720 + 360 * Math.random());\n            let centerStringPx = \" \" + Math.round(center.x) + \"px \" + Math.round(center.y) + \"px\";\n            let sliceSize = Math.round(360 / spinner.length);\n            let snap = sliceSize - (randomRotation % sliceSize);\n            \n            let className = \"cssRule\" + ringNumber;\n            Utils.addRule(className,\n                ` @keyframes ${className} {\n                    0% {\n                        transform:rotate(0deg);\n                        transform-origin: ${centerStringPx};\n                    } \n                    100% {\n                        transform:rotate(${(randomRotation+snap) * isBackwards}deg);\n                        transform-origin: ${centerStringPx};\n                    }\n                }`,\n                ` .${className} { \n                    background: red;\n                    animation-name: ${className};\n                    animation-duration: 4s;\n                    animation-fill-mode: forwards;\n                }`);\n\n            \n            return (\n                <g key={\"g\" + ringNumber + \"_\" + this.state.spinCount} className={className}>\n                    <g key={\"ring\" + ringNumber + \"_\" + this.state.spinCount}>\n                        {\n                        spinner.map((slice,sliceNumber) => {\n                            return this.renderSlice(center, radius, slice, ringNumber, ringCount, sliceNumber, spinner.length);\n                        })}\n                    </g>\n               </g>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div onMouseUp={(e) => this.refresh()}>\n                <svg key={\"s\" + this.state.spinCount} width={this.state.view.w} height={this.state.view.h}>\n                    {this.renderSpinners()}\n                </svg>\n            </div>\n        );\n    }\n\n    refresh() {\n        this.setSize();\n        let spinCount = this.state.spinCount + 1;\n        this.setState({\n            spinCount: spinCount\n        });\n    }\n}\n\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Spinner from './Spinner';\n\nReactDOM.render(\n  <React.Fragment>\n    <Spinner />\n  </React.Fragment>,\n  document.getElementById('root')\n);","\nconst COLORS = [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#ff7f00\",\"#6a3d9a\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#b15928\"];\n\n\nfunction deleteExistingScript(id) {\n    let children = document.head.childNodes;\n    for (let i = 0; i < children.length; i += 1) {\n        const child = children[i];\n        if (child.nodeName === \"STYLE\" && child.id === id) {\n            console.log(\"Removing\", child.id);\n            document.head.removeChild(child);\n        }\n    }\n}\n\n\nmodule.exports = {\n    getQueryParameter: (name) => {\n        let search = document.location.search;\n        if (search && search.length > 1) {\n            if (search.charAt(0) == '?') {\n                search = search.substring(1);\n            }\n            let split = search.split(\"&\");\n            for(let i = 0; i < split.length; i++) {\n                let nv = split[i].split(\"=\");\n                console.log(nv);\n                if (nv && nv.length == 2 && nv[0] === name) {\n                    return nv[1];\n                }\n            }\n        }\n    },\n\n\n    getColor: (i, outOf) => {\n        if (COLORS.length == (outOf - 1)) {\n            return COLORS[i % (COLORS.length - 1)];\n        } else {\n            return COLORS[i % COLORS.length];\n        }\n    },\n\n    addRule: (id, ...rules) => {\n        deleteExistingScript(id);\n        styleEl = document.createElement(\"style\");\n        styleEl.setAttribute(\"id\", id);\n        document.head.appendChild(styleEl);\n        var styleSheet = styleEl.sheet;\n        Object.values(rules).forEach((r,i) => {\n            styleSheet.insertRule(r, i);\n            //console.log(r)\n        });\n        //console.log(styleSheet);\n    }\n};"],"sourceRoot":""}